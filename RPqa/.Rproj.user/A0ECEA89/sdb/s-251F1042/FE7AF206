{
    "contents" : "RPqa.boot = function(dLV, min.length=2, n.samples=99){\n  #\n  # No checking is performed\n  #\n  calcIndex = function(dati, mlen, indices){\n  distB= dati[indices]\n  index1 = mean(distB[distB >= mlen]) # mean value\n  index2 = sum(distB[distB >= mlen])/(sum(distB)) # proportion \n  return(c(index1, index2))\n}\n  bootVector = rep(1:dim(dLV)[2], dLV[1,]) # build sample of L diagonals\n  risT = boot(bootVector, calcIndex, R=n.samples, mlen=min.length)\n  ris = rbind(risT$t0, risT$t)\n  bootVector = rep(1:dim(dLV)[2], dLV[2,]) # build sample of vertical lines\n  risT = boot(bootVector, calcIndex, R=n.samples, mlen=min.length)\n  ris = cbind(ris, rbind(risT$t0, risT$t))\n  rownames(ris) = c(\"Orig\", paste(\"s\", 1:n.samples, sep = \"\"))\n  colnames(ris) = c(\"Lmean\", \"DET\", \"Vmean\", \"LAM\")\n\n  cat(\"ORDINARY NONPARAMETRIC BOOTSTRAP \\n\")\n  cat(\"\\n\")\n  cat(\"Bootstrap statistics:\\n\")\n  cat(\"        original     bias       std.error\\n\")\n  cat(\"Lmean \", ris[1, 1],\" \", mean(ris[2:(n.samples+1), 1])-ris[1, 1],\" \", sd(ris[2:(n.samples+1), 1]), \"\\n\")\n  cat(\"DET   \", ris[1, 2],\" \", mean(ris[2:(n.samples+1), 2])-ris[1, 2],\" \", sd(ris[2:(n.samples+1), 2]), \"\\n\")\n  cat(\"Vmean \", ris[1, 3],\" \", mean(ris[2:(n.samples+1), 3])-ris[1, 3],\" \", sd(ris[2:(n.samples+1), 3]), \"\\n\")\n  cat(\"LAM   \", ris[1, 4],\" \", mean(ris[2:(n.samples+1), 4])-ris[1, 4],\" \", sd(ris[2:(n.samples+1), 4]), \"\\n\")\n  \nreturn(ris)}\n",
    "created" : 1371410895900.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3249736143",
    "id" : "FE7AF206",
    "lastKnownWriteTime" : 1347368672,
    "path" : "~/GitHub/RPqa/RPqa/R/RPqa.boot.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}